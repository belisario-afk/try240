name: CI & Deploy

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: true

jobs:
  build-test:
    name: Lint, Test, Build (Node ${{ matrix.node }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: [18, 20]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        # No "version" here; action will use package.json's packageManager (pnpm@9.10.0)

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node }}
          cache: 'pnpm'

      - name: Cache Vite
        uses: actions/cache@v4
        with:
          path: |
            ~/.vite
            node_modules/.cache
          key: ${{ runner.os }}-vite-${{ hashFiles('pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-vite-

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Lint
        run: pnpm lint

      - name: Unit tests
        run: pnpm test

      - name: Build
        run: pnpm build
        env:
          SPOTIFY_CLIENT_ID: 927fda6918514f96903e828fcd6bb576
          MOCK: true

      - name: Bundle analyzer
        if: always()
        run: node ./scripts/print-bundle-stats.cjs || true

      - name: Upload dist artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  e2e:
    name: Playwright E2E (mock)
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        # No "version" here; action will use package.json's packageManager (pnpm@9.10.0)

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install
        run: pnpm install --frozen-lockfile

      - name: Install browsers
        run: npx playwright install --with-deps

      - name: Run e2e tests
        run: pnpm test:e2e
        env:
          MOCK: true

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [build-test, e2e]
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4